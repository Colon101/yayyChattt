[
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "send_from_directory",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "SocketIO",
        "importPath": "flask_socketio",
        "description": "flask_socketio",
        "isExtraImport": true,
        "detail": "flask_socketio",
        "documentation": {}
    },
    {
        "label": "emit",
        "importPath": "flask_socketio",
        "description": "flask_socketio",
        "isExtraImport": true,
        "detail": "flask_socketio",
        "documentation": {}
    },
    {
        "label": "sqlite3",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlite3",
        "description": "sqlite3",
        "detail": "sqlite3",
        "documentation": {}
    },
    {
        "label": "create_table",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def create_table():\n    conn = sqlite3.connect(DB_NAME)\n    cursor = conn.cursor()\n    cursor.execute('''\n        CREATE TABLE IF NOT EXISTS ChatMessages (\n            MessageID INTEGER PRIMARY KEY AUTOINCREMENT,\n            MessageText TEXT,\n            Timestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n        )\n    ''')",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def index():\n    return render_template('index.html')\n@socketio.on('message_sent')\ndef handle_message(data):\n    # Remove leading and trailing spaces\n    message_text = data['message_text'].strip()\n    # Check if the message text is not just spaces\n    if message_text:\n        conn = sqlite3.connect(DB_NAME)\n        cursor = conn.cursor()",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "handle_message",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def handle_message(data):\n    # Remove leading and trailing spaces\n    message_text = data['message_text'].strip()\n    # Check if the message text is not just spaces\n    if message_text:\n        conn = sqlite3.connect(DB_NAME)\n        cursor = conn.cursor()\n        cursor.execute('''\n            INSERT INTO ChatMessages (MessageText)\n            VALUES (?)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "get_messages",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def get_messages():\n    conn = sqlite3.connect(DB_NAME)\n    cursor = conn.cursor()\n    cursor.execute('''\n        SELECT * FROM ChatMessages\n    ''')\n    messages = cursor.fetchall()\n    conn.close()\n    return jsonify({\"messages\": messages})\nif __name__ == '__main__':",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__, template_folder=\"template\")\napp.config['SECRET_KEY'] = 'secret'\nsocketio = SocketIO(app)\n# SQLite database setup\nDB_NAME = \"chat_database.db\"\ndef create_table():\n    conn = sqlite3.connect(DB_NAME)\n    cursor = conn.cursor()\n    cursor.execute('''\n        CREATE TABLE IF NOT EXISTS ChatMessages (",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config['SECRET_KEY']",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config['SECRET_KEY'] = 'secret'\nsocketio = SocketIO(app)\n# SQLite database setup\nDB_NAME = \"chat_database.db\"\ndef create_table():\n    conn = sqlite3.connect(DB_NAME)\n    cursor = conn.cursor()\n    cursor.execute('''\n        CREATE TABLE IF NOT EXISTS ChatMessages (\n            MessageID INTEGER PRIMARY KEY AUTOINCREMENT,",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "socketio",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "socketio = SocketIO(app)\n# SQLite database setup\nDB_NAME = \"chat_database.db\"\ndef create_table():\n    conn = sqlite3.connect(DB_NAME)\n    cursor = conn.cursor()\n    cursor.execute('''\n        CREATE TABLE IF NOT EXISTS ChatMessages (\n            MessageID INTEGER PRIMARY KEY AUTOINCREMENT,\n            MessageText TEXT,",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "DB_NAME",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "DB_NAME = \"chat_database.db\"\ndef create_table():\n    conn = sqlite3.connect(DB_NAME)\n    cursor = conn.cursor()\n    cursor.execute('''\n        CREATE TABLE IF NOT EXISTS ChatMessages (\n            MessageID INTEGER PRIMARY KEY AUTOINCREMENT,\n            MessageText TEXT,\n            Timestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n        )",
        "detail": "app",
        "documentation": {}
    }
]